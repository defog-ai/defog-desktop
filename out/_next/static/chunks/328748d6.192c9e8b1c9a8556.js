"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[440],{87930:function(t,e,r){r.d(e,{$4:function(){return isParentOf},$_:function(){return ContentString},BW:function(){return findRootTypeKey},CO:function(){return snapshot},D$:function(){return encodeStateAsUpdate},H6:function(){return UndoManager},MM:function(){return ContentFormat},NG:function(){return applyUpdate},Ox:function(){return createSnapshot},QW:function(){return Doc},UQ:function(){return iterateDeletedStructs},Uq:function(){return compareRelativePositions},VG:function(){return createDeleteSet},Zi:function(){return RelativePosition},aC:function(){return Snapshot},at:function(){return createID},ck:function(){return Item},eI:function(){return YXmlText},gJ:function(){return encodeStateVector},lt:function(){return YXmlElement},og:function(){return createRelativePositionFromJSON},or:function(){return createAbsolutePositionFromRelativePosition},uY:function(){return isDeleted},ud:function(){return typeListToArraySnapshot},w$:function(){return createRelativePositionFromTypeIndex},xv:function(){return YText},zc:function(){return ContentType}});var n=r(69506),i=r(96743),s=r(73583),l=r(35423),o=r(873),c=r(65275),a=r(16086),d=r(40361),h=r(6472),u=r(80554),g=r(4253),p=r(83685),f=r(45791),m=r(55728),S=r(65919),y=r(11585),w=r(95947),k=r(11530);let DeleteItem=class DeleteItem{constructor(t,e){this.clock=t,this.len=e}};let DeleteSet=class DeleteSet{constructor(){this.clients=new Map}};let iterateDeletedStructs=(t,e,r)=>e.clients.forEach((e,n)=>{let i=t.doc.store.clients.get(n);for(let n=0;n<e.length;n++){let s=e[n];iterateStructs(t,i,s.clock,s.len,r)}}),findIndexDS=(t,e)=>{let r=0,n=t.length-1;for(;r<=n;){let i=s.GW((r+n)/2),l=t[i],o=l.clock;if(o<=e){if(e<o+l.len)return i;r=i+1}else n=i-1}return null},isDeleted=(t,e)=>{let r=t.clients.get(e.client);return void 0!==r&&null!==findIndexDS(r,e.clock)},sortAndMergeDeleteSet=t=>{t.clients.forEach(t=>{let e,r;for(t.sort((t,e)=>t.clock-e.clock),e=1,r=1;e<t.length;e++){let n=t[r-1],i=t[e];n.clock+n.len>=i.clock?n.len=s.Fp(n.len,i.clock+i.len-n.clock):(r<e&&(t[r]=i),r++)}t.length=r})},mergeDeleteSets=t=>{let e=new DeleteSet;for(let r=0;r<t.length;r++)t[r].clients.forEach((n,s)=>{if(!e.clients.has(s)){let l=n.slice();for(let e=r+1;e<t.length;e++)i.s7(l,t[e].clients.get(s)||[]);e.clients.set(s,l)}});return sortAndMergeDeleteSet(e),e},addToDeleteSet=(t,e,r,n)=>{l.Yu(t.clients,e,()=>[]).push(new DeleteItem(r,n))},createDeleteSet=()=>new DeleteSet,createDeleteSetFromStructStore=t=>{let e=createDeleteSet();return t.clients.forEach((t,r)=>{let n=[];for(let e=0;e<t.length;e++){let r=t[e];if(r.deleted){let i=r.id.clock,s=r.length;if(e+1<t.length)for(let r=t[e+1];e+1<t.length&&r.deleted;r=t[++e+1])s+=r.length;n.push(new DeleteItem(i,s))}}n.length>0&&e.clients.set(r,n)}),e},writeDeleteSet=(t,e)=>{o.uE(t.restEncoder,e.clients.size),i.Dp(e.clients.entries()).sort((t,e)=>e[0]-t[0]).forEach(([e,r])=>{t.resetDsCurVal(),o.uE(t.restEncoder,e);let n=r.length;o.uE(t.restEncoder,n);for(let e=0;e<n;e++){let n=r[e];t.writeDsClock(n.clock),t.writeDsLen(n.len)}})},readDeleteSet=t=>{let e=new DeleteSet,r=c.yg(t.restDecoder);for(let n=0;n<r;n++){t.resetDsCurVal();let r=c.yg(t.restDecoder),n=c.yg(t.restDecoder);if(n>0){let i=l.Yu(e.clients,r,()=>[]);for(let e=0;e<n;e++)i.push(new DeleteItem(t.readDsClock(),t.readDsLen()))}}return e},readAndApplyDeleteSet=(t,e,r)=>{let n=new DeleteSet,i=c.yg(t.restDecoder);for(let s=0;s<i;s++){t.resetDsCurVal();let i=c.yg(t.restDecoder),s=c.yg(t.restDecoder),l=r.clients.get(i)||[],o=getState(r,i);for(let r=0;r<s;r++){let r=t.readDsClock(),s=r+t.readDsLen();if(r<o){o<s&&addToDeleteSet(n,i,o,s-o);let t=findIndexSS(l,r),c=l[t];for(!c.deleted&&c.id.clock<r&&(l.splice(t+1,0,splitItem(e,c,r-c.id.clock)),t++);t<l.length;)if((c=l[t++]).id.clock<s)c.deleted||(s<c.id.clock+c.length&&l.splice(t,0,splitItem(e,c,s-c.id.clock)),c.delete(e));else break}else addToDeleteSet(n,i,r,s-r)}}if(n.clients.size>0){let t=new UpdateEncoderV2;return o.uE(t.restEncoder,0),writeDeleteSet(t,n),t.toUint8Array()}return null},D=a.U7;let Doc=class Doc extends n.g{constructor({guid:t=a.k$(),collectionid:e=null,gc:r=!0,gcFilter:n=()=>!0,meta:i=null,autoLoad:s=!1,shouldLoad:l=!0}={}){super(),this.gc=r,this.gcFilter=n,this.clientID=D(),this.guid=t,this.collectionid=e,this.share=new Map,this.store=new StructStore,this._transaction=null,this._transactionCleanups=[],this.subdocs=new Set,this._item=null,this.shouldLoad=l,this.autoLoad=s,this.meta=i,this.isLoaded=!1,this.isSynced=!1,this.whenLoaded=d.Ue(t=>{this.on("load",()=>{this.isLoaded=!0,t(this)})});let provideSyncedPromise=()=>d.Ue(t=>{let eventHandler=e=>{(void 0===e||!0===e)&&(this.off("sync",eventHandler),t())};this.on("sync",eventHandler)});this.on("sync",t=>{!1===t&&this.isSynced&&(this.whenSynced=provideSyncedPromise()),this.isSynced=void 0===t||!0===t,this.isSynced&&!this.isLoaded&&this.emit("load",[this])}),this.whenSynced=provideSyncedPromise()}load(){let t=this._item;null===t||this.shouldLoad||transact(t.parent.doc,t=>{t.subdocsLoaded.add(this)},null,!0),this.shouldLoad=!0}getSubdocs(){return this.subdocs}getSubdocGuids(){return new Set(i.Dp(this.subdocs).map(t=>t.guid))}transact(t,e=null){return transact(this,t,e)}get(t,e=AbstractType){let r=l.Yu(this.share,t,()=>{let t=new e;return t._integrate(this,null),t}),n=r.constructor;if(e!==AbstractType&&n!==e){if(n===AbstractType){let n=new e;n._map=r._map,r._map.forEach(t=>{for(;null!==t;t=t.left)t.parent=n}),n._start=r._start;for(let t=n._start;null!==t;t=t.right)t.parent=n;return n._length=r._length,this.share.set(t,n),n._integrate(this,null),n}throw Error(`Type with the name ${t} has already been defined with a different constructor`)}return r}getArray(t=""){return this.get(t,YArray)}getText(t=""){return this.get(t,YText)}getMap(t=""){return this.get(t,YMap)}getXmlElement(t=""){return this.get(t,YXmlElement)}getXmlFragment(t=""){return this.get(t,YXmlFragment)}toJSON(){let t={};return this.share.forEach((e,r)=>{t[r]=e.toJSON()}),t}destroy(){i.Dp(this.subdocs).forEach(t=>t.destroy());let t=this._item;if(null!==t){this._item=null;let e=t.content;e.doc=new Doc({guid:this.guid,...e.opts,shouldLoad:!1}),e.doc._item=t,transact(t.parent.doc,r=>{let n=e.doc;t.deleted||r.subdocsAdded.add(n),r.subdocsRemoved.add(this)},null,!0)}this.emit("destroyed",[!0]),this.emit("destroy",[this]),super.destroy()}};let DSDecoderV1=class DSDecoderV1{constructor(t){this.restDecoder=t}resetDsCurVal(){}readDsClock(){return c.yg(this.restDecoder)}readDsLen(){return c.yg(this.restDecoder)}};let UpdateDecoderV1=class UpdateDecoderV1 extends DSDecoderV1{readLeftID(){return createID(c.yg(this.restDecoder),c.yg(this.restDecoder))}readRightID(){return createID(c.yg(this.restDecoder),c.yg(this.restDecoder))}readClient(){return c.yg(this.restDecoder)}readInfo(){return c.kj(this.restDecoder)}readString(){return c.kf(this.restDecoder)}readParentInfo(){return 1===c.yg(this.restDecoder)}readTypeRef(){return c.yg(this.restDecoder)}readLen(){return c.yg(this.restDecoder)}readAny(){return c.v_(this.restDecoder)}readBuf(){return h.f9(c.HN(this.restDecoder))}readJSON(){return JSON.parse(c.kf(this.restDecoder))}readKey(){return c.kf(this.restDecoder)}};let DSDecoderV2=class DSDecoderV2{constructor(t){this.dsCurrVal=0,this.restDecoder=t}resetDsCurVal(){this.dsCurrVal=0}readDsClock(){return this.dsCurrVal+=c.yg(this.restDecoder),this.dsCurrVal}readDsLen(){let t=c.yg(this.restDecoder)+1;return this.dsCurrVal+=t,t}};let UpdateDecoderV2=class UpdateDecoderV2 extends DSDecoderV2{constructor(t){super(t),this.keys=[],c.yg(t),this.keyClockDecoder=new c.dD(c.HN(t)),this.clientDecoder=new c.UF(c.HN(t)),this.leftClockDecoder=new c.dD(c.HN(t)),this.rightClockDecoder=new c.dD(c.HN(t)),this.infoDecoder=new c.XW(c.HN(t),c.kj),this.stringDecoder=new c.sO(c.HN(t)),this.parentInfoDecoder=new c.XW(c.HN(t),c.kj),this.typeRefDecoder=new c.UF(c.HN(t)),this.lenDecoder=new c.UF(c.HN(t))}readLeftID(){return new ID(this.clientDecoder.read(),this.leftClockDecoder.read())}readRightID(){return new ID(this.clientDecoder.read(),this.rightClockDecoder.read())}readClient(){return this.clientDecoder.read()}readInfo(){return this.infoDecoder.read()}readString(){return this.stringDecoder.read()}readParentInfo(){return 1===this.parentInfoDecoder.read()}readTypeRef(){return this.typeRefDecoder.read()}readLen(){return this.lenDecoder.read()}readAny(){return c.v_(this.restDecoder)}readBuf(){return c.HN(this.restDecoder)}readJSON(){return c.v_(this.restDecoder)}readKey(){let t=this.keyClockDecoder.read();if(t<this.keys.length)return this.keys[t];{let t=this.stringDecoder.read();return this.keys.push(t),t}}};let DSEncoderV1=class DSEncoderV1{constructor(){this.restEncoder=o.Mf()}toUint8Array(){return o._f(this.restEncoder)}resetDsCurVal(){}writeDsClock(t){o.uE(this.restEncoder,t)}writeDsLen(t){o.uE(this.restEncoder,t)}};let UpdateEncoderV1=class UpdateEncoderV1 extends DSEncoderV1{writeLeftID(t){o.uE(this.restEncoder,t.client),o.uE(this.restEncoder,t.clock)}writeRightID(t){o.uE(this.restEncoder,t.client),o.uE(this.restEncoder,t.clock)}writeClient(t){o.uE(this.restEncoder,t)}writeInfo(t){o.$F(this.restEncoder,t)}writeString(t){o.uw(this.restEncoder,t)}writeParentInfo(t){o.uE(this.restEncoder,t?1:0)}writeTypeRef(t){o.uE(this.restEncoder,t)}writeLen(t){o.uE(this.restEncoder,t)}writeAny(t){o.EM(this.restEncoder,t)}writeBuf(t){o.mP(this.restEncoder,t)}writeJSON(t){o.uw(this.restEncoder,JSON.stringify(t))}writeKey(t){o.uw(this.restEncoder,t)}};let DSEncoderV2=class DSEncoderV2{constructor(){this.restEncoder=o.Mf(),this.dsCurrVal=0}toUint8Array(){return o._f(this.restEncoder)}resetDsCurVal(){this.dsCurrVal=0}writeDsClock(t){let e=t-this.dsCurrVal;this.dsCurrVal=t,o.uE(this.restEncoder,e)}writeDsLen(t){0===t&&u.zR(),o.uE(this.restEncoder,t-1),this.dsCurrVal+=t}};let UpdateEncoderV2=class UpdateEncoderV2 extends DSEncoderV2{constructor(){super(),this.keyMap=new Map,this.keyClock=0,this.keyClockEncoder=new o.sX,this.clientEncoder=new o.HE,this.leftClockEncoder=new o.sX,this.rightClockEncoder=new o.sX,this.infoEncoder=new o.GF(o.$F),this.stringEncoder=new o.TS,this.parentInfoEncoder=new o.GF(o.$F),this.typeRefEncoder=new o.HE,this.lenEncoder=new o.HE}toUint8Array(){let t=o.Mf();return o.uE(t,0),o.mP(t,this.keyClockEncoder.toUint8Array()),o.mP(t,this.clientEncoder.toUint8Array()),o.mP(t,this.leftClockEncoder.toUint8Array()),o.mP(t,this.rightClockEncoder.toUint8Array()),o.mP(t,o._f(this.infoEncoder)),o.mP(t,this.stringEncoder.toUint8Array()),o.mP(t,o._f(this.parentInfoEncoder)),o.mP(t,this.typeRefEncoder.toUint8Array()),o.mP(t,this.lenEncoder.toUint8Array()),o.HK(t,o._f(this.restEncoder)),o._f(t)}writeLeftID(t){this.clientEncoder.write(t.client),this.leftClockEncoder.write(t.clock)}writeRightID(t){this.clientEncoder.write(t.client),this.rightClockEncoder.write(t.clock)}writeClient(t){this.clientEncoder.write(t)}writeInfo(t){this.infoEncoder.write(t)}writeString(t){this.stringEncoder.write(t)}writeParentInfo(t){this.parentInfoEncoder.write(t?1:0)}writeTypeRef(t){this.typeRefEncoder.write(t)}writeLen(t){this.lenEncoder.write(t)}writeAny(t){o.EM(this.restEncoder,t)}writeBuf(t){o.mP(this.restEncoder,t)}writeJSON(t){o.EM(this.restEncoder,t)}writeKey(t){let e=this.keyMap.get(t);void 0===e?(this.keyClockEncoder.write(this.keyClock++),this.stringEncoder.write(t)):this.keyClockEncoder.write(e)}};let writeStructs=(t,e,r,n)=>{n=s.Fp(n,e[0].id.clock);let i=findIndexSS(e,n);o.uE(t.restEncoder,e.length-i),t.writeClient(r),o.uE(t.restEncoder,n);let l=e[i];l.write(t,n-l.id.clock);for(let r=i+1;r<e.length;r++)e[r].write(t,0)},writeClientsStructs=(t,e,r)=>{let n=new Map;r.forEach((t,r)=>{getState(e,r)>t&&n.set(r,t)}),getStateVector(e).forEach((t,e)=>{r.has(e)||n.set(e,0)}),o.uE(t.restEncoder,n.size),i.Dp(n.entries()).sort((t,e)=>e[0]-t[0]).forEach(([r,n])=>{writeStructs(t,e.clients.get(r),r,n)})},readClientsStructRefs=(t,e)=>{let r=l.Ue(),n=c.yg(t.restDecoder);for(let i=0;i<n;i++){let n=c.yg(t.restDecoder),i=Array(n),s=t.readClient(),l=c.yg(t.restDecoder);r.set(s,{i:0,refs:i});for(let r=0;r<n;r++){let n=t.readInfo();switch(g.kr&n){case 0:{let e=t.readLen();i[r]=new GC(createID(s,l),e),l+=e;break}case 10:{let e=c.yg(t.restDecoder);i[r]=new Skip(createID(s,l),e),l+=e;break}default:{let o=(n&(g.rc|g.x1))==0,c=new Item(createID(s,l),null,(n&g.x1)===g.x1?t.readLeftID():null,null,(n&g.rc)===g.rc?t.readRightID():null,o?t.readParentInfo()?e.get(t.readString()):t.readLeftID():null,o&&(n&g.cq)===g.cq?t.readString():null,readItemContent(t,n));i[r]=c,l+=c.length}}}}return r},integrateStructs=(t,e,r)=>{let n=[],s=i.Dp(r.keys()).sort((t,e)=>t-e);if(0===s.length)return null;let getNextStructTarget=()=>{if(0===s.length)return null;let t=r.get(s[s.length-1]);for(;t.refs.length===t.i;){if(s.pop(),!(s.length>0))return null;t=r.get(s[s.length-1])}return t},c=getNextStructTarget();if(null===c)return null;let a=new StructStore,d=new Map,updateMissingSv=(t,e)=>{let r=d.get(t);(null==r||r>e)&&d.set(t,e)},h=c.refs[c.i++],u=new Map,addStackToRestSS=()=>{for(let t of n){let e=t.id.client,n=r.get(e);n?(n.i--,a.clients.set(e,n.refs.slice(n.i)),r.delete(e),n.i=0,n.refs=[]):a.clients.set(e,[t]),s=s.filter(t=>t!==e)}n.length=0};for(;;){if(h.constructor!==Skip){let i=l.Yu(u,h.id.client,()=>getState(e,h.id.client)),s=i-h.id.clock;if(s<0)n.push(h),updateMissingSv(h.id.client,h.id.clock-1),addStackToRestSS();else{let i=h.getMissing(t,e);if(null!==i){n.push(h);let t=r.get(i)||{refs:[],i:0};if(t.refs.length===t.i)updateMissingSv(i,getState(e,i)),addStackToRestSS();else{h=t.refs[t.i++];continue}}else(0===s||s<h.length)&&(h.integrate(t,s),u.set(h.id.client,h.id.clock+h.length))}}if(n.length>0)h=n.pop();else if(null!==c&&c.i<c.refs.length)h=c.refs[c.i++];else{if(null===(c=getNextStructTarget()))break;h=c.refs[c.i++]}}if(a.clients.size>0){let t=new UpdateEncoderV2;return writeClientsStructs(t,a,new Map),o.uE(t.restEncoder,0),{missing:d,update:t.toUint8Array()}}return null},writeStructsFromTransaction=(t,e)=>writeClientsStructs(t,e.doc.store,e.beforeState),readUpdateV2=(t,e,r,n=new UpdateDecoderV2(t))=>transact(e,t=>{t.local=!1;let e=!1,r=t.doc,i=r.store,s=readClientsStructRefs(n,r),l=integrateStructs(t,i,s),o=i.pendingStructs;if(o){for(let[t,r]of o.missing)if(r<getState(i,t)){e=!0;break}if(l){for(let[t,e]of l.missing){let r=o.missing.get(t);(null==r||r>e)&&o.missing.set(t,e)}o.update=mergeUpdatesV2([o.update,l.update])}}else i.pendingStructs=l;let a=readAndApplyDeleteSet(n,t,i);if(i.pendingDs){let e=new UpdateDecoderV2(c.l1(i.pendingDs));c.yg(e.restDecoder);let r=readAndApplyDeleteSet(e,t,i);a&&r?i.pendingDs=mergeUpdatesV2([a,r]):i.pendingDs=a||r}else i.pendingDs=a;if(e){let e=i.pendingStructs.update;i.pendingStructs=null,applyUpdateV2(t.doc,e)}},r,!1),applyUpdateV2=(t,e,r,n=UpdateDecoderV2)=>{let i=c.l1(e);readUpdateV2(i,t,r,new n(i))},applyUpdate=(t,e,r)=>applyUpdateV2(t,e,r,UpdateDecoderV1),writeStateAsUpdate=(t,e,r=new Map)=>{writeClientsStructs(t,e.store,r),writeDeleteSet(t,createDeleteSetFromStructStore(e.store))},encodeStateAsUpdateV2=(t,e=new Uint8Array([0]),r=new UpdateEncoderV2)=>{let n=decodeStateVector(e);writeStateAsUpdate(r,t,n);let i=[r.toUint8Array()];if(t.store.pendingDs&&i.push(t.store.pendingDs),t.store.pendingStructs&&i.push(diffUpdateV2(t.store.pendingStructs.update,e)),i.length>1){if(r.constructor===UpdateEncoderV1)return mergeUpdates(i.map((t,e)=>0===e?t:convertUpdateFormatV2ToV1(t)));if(r.constructor===UpdateEncoderV2)return mergeUpdatesV2(i)}return i[0]},encodeStateAsUpdate=(t,e)=>encodeStateAsUpdateV2(t,e,new UpdateEncoderV1),readStateVector=t=>{let e=new Map,r=c.yg(t.restDecoder);for(let n=0;n<r;n++){let r=c.yg(t.restDecoder),n=c.yg(t.restDecoder);e.set(r,n)}return e},decodeStateVector=t=>readStateVector(new DSDecoderV1(c.l1(t))),writeStateVector=(t,e)=>(o.uE(t.restEncoder,e.size),i.Dp(e.entries()).sort((t,e)=>e[0]-t[0]).forEach(([e,r])=>{o.uE(t.restEncoder,e),o.uE(t.restEncoder,r)}),t),writeDocumentStateVector=(t,e)=>writeStateVector(t,getStateVector(e.store)),encodeStateVectorV2=(t,e=new DSEncoderV2)=>(t instanceof Map?writeStateVector(e,t):writeDocumentStateVector(e,t),e.toUint8Array()),encodeStateVector=t=>encodeStateVectorV2(t,new DSEncoderV1);let EventHandler=class EventHandler{constructor(){this.l=[]}};let createEventHandler=()=>new EventHandler,addEventHandlerListener=(t,e)=>t.l.push(e),removeEventHandlerListener=(t,e)=>{let r=t.l,n=r.length;t.l=r.filter(t=>e!==t),n===t.l.length&&console.error("[yjs] Tried to remove event handler that doesn't exist.")},callEventHandlerListeners=(t,e,r)=>p.PP(t.l,[e,r]);let ID=class ID{constructor(t,e){this.client=t,this.clock=e}};let compareIDs=(t,e)=>t===e||null!==t&&null!==e&&t.client===e.client&&t.clock===e.clock,createID=(t,e)=>new ID(t,e),findRootTypeKey=t=>{for(let[e,r]of t.doc.share.entries())if(r===t)return e;throw u.zR()},isParentOf=(t,e)=>{for(;null!==e;){if(e.parent===t)return!0;e=e.parent._item}return!1};let RelativePosition=class RelativePosition{constructor(t,e,r,n=0){this.type=t,this.tname=e,this.item=r,this.assoc=n}};let createRelativePositionFromJSON=t=>new RelativePosition(null==t.type?null:createID(t.type.client,t.type.clock),t.tname||null,null==t.item?null:createID(t.item.client,t.item.clock),null==t.assoc?0:t.assoc);let AbsolutePosition=class AbsolutePosition{constructor(t,e,r=0){this.type=t,this.index=e,this.assoc=r}};let createAbsolutePosition=(t,e,r=0)=>new AbsolutePosition(t,e,r),createRelativePosition=(t,e,r)=>{let n=null,i=null;return null===t._item?i=findRootTypeKey(t):n=createID(t._item.id.client,t._item.id.clock),new RelativePosition(n,i,e,r)},createRelativePositionFromTypeIndex=(t,e,r=0)=>{let n=t._start;if(r<0){if(0===e)return createRelativePosition(t,null,r);e--}for(;null!==n;){if(!n.deleted&&n.countable){if(n.length>e)return createRelativePosition(t,createID(n.id.client,n.id.clock+e),r);e-=n.length}if(null===n.right&&r<0)return createRelativePosition(t,n.lastId,r);n=n.right}return createRelativePosition(t,null,r)},createAbsolutePositionFromRelativePosition=(t,e,r=!0)=>{let n=e.store,i=t.item,s=t.type,l=t.tname,o=t.assoc,c=null,a=0;if(null!==i){if(getState(n,i.client)<=i.clock)return null;let t=r?followRedone(n,i):{item:getItem(n,i),diff:0},e=t.item;if(!(e instanceof Item))return null;if(null===(c=e.parent)._item||!c._item.deleted){a=e.deleted||!e.countable?0:t.diff+(o>=0?0:1);let r=e.left;for(;null!==r;)!r.deleted&&r.countable&&(a+=r.length),r=r.left}}else{if(null!==l)c=e.get(l);else if(null!==s){if(getState(n,s.client)<=s.clock)return null;let{item:t}=r?followRedone(n,s):{item:getItem(n,s)};if(!(t instanceof Item)||!(t.content instanceof ContentType))return null;c=t.content.type}else throw u.zR();a=o>=0?c._length:0}return createAbsolutePosition(c,a,t.assoc)},compareRelativePositions=(t,e)=>t===e||null!==t&&null!==e&&t.tname===e.tname&&compareIDs(t.item,e.item)&&compareIDs(t.type,e.type)&&t.assoc===e.assoc;let Snapshot=class Snapshot{constructor(t,e){this.ds=t,this.sv=e}};let createSnapshot=(t,e)=>new Snapshot(t,e);createSnapshot(createDeleteSet(),new Map);let snapshot=t=>createSnapshot(createDeleteSetFromStructStore(t.store),getStateVector(t.store)),isVisible=(t,e)=>void 0===e?!t.deleted:e.sv.has(t.id.client)&&(e.sv.get(t.id.client)||0)>t.id.clock&&!isDeleted(e.ds,t.id),splitSnapshotAffectedStructs=(t,e)=>{let r=l.Yu(t.meta,splitSnapshotAffectedStructs,f.Ue),n=t.doc.store;r.has(e)||(e.sv.forEach((e,r)=>{e<getState(n,r)&&getItemCleanStart(t,createID(r,e))}),iterateDeletedStructs(t,e.ds,t=>{}),r.add(e))};let StructStore=class StructStore{constructor(){this.clients=new Map,this.pendingStructs=null,this.pendingDs=null}};let getStateVector=t=>{let e=new Map;return t.clients.forEach((t,r)=>{let n=t[t.length-1];e.set(r,n.id.clock+n.length)}),e},getState=(t,e)=>{let r=t.clients.get(e);if(void 0===r)return 0;let n=r[r.length-1];return n.id.clock+n.length},addStruct=(t,e)=>{let r=t.clients.get(e.id.client);if(void 0===r)r=[],t.clients.set(e.id.client,r);else{let t=r[r.length-1];if(t.id.clock+t.length!==e.id.clock)throw u.zR()}r.push(e)},findIndexSS=(t,e)=>{let r=0,n=t.length-1,i=t[n],l=i.id.clock;if(l===e)return n;let o=s.GW(e/(l+i.length-1)*n);for(;r<=n;){if((l=(i=t[o]).id.clock)<=e){if(e<l+i.length)return o;r=o+1}else n=o-1;o=s.GW((r+n)/2)}throw u.zR()},getItem=(t,e)=>{let r=t.clients.get(e.client);return r[findIndexSS(r,e.clock)]},findIndexCleanStart=(t,e,r)=>{let n=findIndexSS(e,r),i=e[n];return i.id.clock<r&&i instanceof Item?(e.splice(n+1,0,splitItem(t,i,r-i.id.clock)),n+1):n},getItemCleanStart=(t,e)=>{let r=t.doc.store.clients.get(e.client);return r[findIndexCleanStart(t,r,e.clock)]},getItemCleanEnd=(t,e,r)=>{let n=e.clients.get(r.client),i=findIndexSS(n,r.clock),s=n[i];return r.clock!==s.id.clock+s.length-1&&s.constructor!==GC&&n.splice(i+1,0,splitItem(t,s,r.clock-s.id.clock+1)),s},replaceStruct=(t,e,r)=>{let n=t.clients.get(e.id.client);n[findIndexSS(n,e.id.clock)]=r},iterateStructs=(t,e,r,n,i)=>{let s;if(0===n)return;let l=r+n,o=findIndexCleanStart(t,e,r);do l<(s=e[o++]).id.clock+s.length&&findIndexCleanStart(t,e,l),i(s);while(o<e.length&&e[o].id.clock<l)};let Transaction=class Transaction{constructor(t,e,r){this.doc=t,this.deleteSet=new DeleteSet,this.beforeState=getStateVector(t.store),this.afterState=new Map,this.changed=new Map,this.changedParentTypes=new Map,this._mergeStructs=[],this.origin=e,this.meta=new Map,this.local=r,this.subdocsAdded=new Set,this.subdocsRemoved=new Set,this.subdocsLoaded=new Set,this._needFormattingCleanup=!1}};let writeUpdateMessageFromTransaction=(t,e)=>!!(0!==e.deleteSet.clients.size||l.Yj(e.afterState,(t,r)=>e.beforeState.get(r)!==t))&&(sortAndMergeDeleteSet(e.deleteSet),writeStructsFromTransaction(t,e),writeDeleteSet(t,e.deleteSet),!0),addChangedTypeToTransaction=(t,e,r)=>{let n=e._item;(null===n||n.id.clock<(t.beforeState.get(n.id.client)||0)&&!n.deleted)&&l.Yu(t.changed,e,f.Ue).add(r)},tryToMergeWithLefts=(t,e)=>{let r=t[e],n=t[e-1],i=e;for(;i>0;r=n,n=t[--i-1]){if(n.deleted===r.deleted&&n.constructor===r.constructor&&n.mergeWith(r)){r instanceof Item&&null!==r.parentSub&&r.parent._map.get(r.parentSub)===r&&r.parent._map.set(r.parentSub,n);continue}break}let s=e-i;return s&&t.splice(e+1-s,s),s},tryGcDeleteSet=(t,e,r)=>{for(let[n,i]of t.clients.entries()){let t=e.clients.get(n);for(let n=i.length-1;n>=0;n--){let s=i[n],l=s.clock+s.len;for(let n=findIndexSS(t,s.clock),i=t[n];n<t.length&&i.id.clock<l;i=t[++n]){let i=t[n];if(s.clock+s.len<=i.id.clock)break;i instanceof Item&&i.deleted&&!i.keep&&r(i)&&i.gc(e,!1)}}}},tryMergeDeleteSet=(t,e)=>{t.clients.forEach((t,r)=>{let n=e.clients.get(r);for(let e=t.length-1;e>=0;e--){let r=t[e],i=s.VV(n.length-1,1+findIndexSS(n,r.clock+r.len-1));for(let t=i,e=n[t];t>0&&e.id.clock>=r.clock;e=n[t])t-=1+tryToMergeWithLefts(n,t)}})},cleanupTransactions=(t,e)=>{if(e<t.length){let r=t[e],n=r.doc,i=n.store,l=r.deleteSet,o=r._mergeStructs;try{sortAndMergeDeleteSet(l),r.afterState=getStateVector(r.doc.store),n.emit("beforeObserverCalls",[r,n]);let t=[];r.changed.forEach((e,n)=>t.push(()=>{null!==n._item&&n._item.deleted||n._callObserver(r,e)})),t.push(()=>{r.changedParentTypes.forEach((t,e)=>{e._dEH.l.length>0&&(null===e._item||!e._item.deleted)&&((t=t.filter(t=>null===t.target._item||!t.target._item.deleted)).forEach(t=>{t.currentTarget=e,t._path=null}),t.sort((t,e)=>t.path.length-e.path.length),callEventHandlerListeners(e._dEH,t,r))})}),t.push(()=>n.emit("afterTransaction",[r,n])),(0,p.PP)(t,[]),r._needFormattingCleanup&&cleanupYTextAfterTransaction(r)}finally{n.gc&&tryGcDeleteSet(l,i,n.gcFilter),tryMergeDeleteSet(l,i),r.afterState.forEach((t,e)=>{let n=r.beforeState.get(e)||0;if(n!==t){let t=i.clients.get(e),r=s.Fp(findIndexSS(t,n),1);for(let e=t.length-1;e>=r;)e-=1+tryToMergeWithLefts(t,e)}});for(let t=o.length-1;t>=0;t--){let{client:e,clock:r}=o[t].id,n=i.clients.get(e),s=findIndexSS(n,r);!(s+1<n.length&&tryToMergeWithLefts(n,s+1)>1)&&s>0&&tryToMergeWithLefts(n,s)}if(r.local||r.afterState.get(n.clientID)===r.beforeState.get(n.clientID)||(m.S0(S.ud,S.Pl,"[yjs] ",S.YW,S.hM,"Changed the client-id because another client seems to be using it."),n.clientID=D()),n.emit("afterTransactionCleanup",[r,n]),n._observers.has("update")){let t=new UpdateEncoderV1,e=writeUpdateMessageFromTransaction(t,r);e&&n.emit("update",[t.toUint8Array(),r.origin,n,r])}if(n._observers.has("updateV2")){let t=new UpdateEncoderV2,e=writeUpdateMessageFromTransaction(t,r);e&&n.emit("updateV2",[t.toUint8Array(),r.origin,n,r])}let{subdocsAdded:c,subdocsLoaded:a,subdocsRemoved:d}=r;(c.size>0||d.size>0||a.size>0)&&(c.forEach(t=>{t.clientID=n.clientID,null==t.collectionid&&(t.collectionid=n.collectionid),n.subdocs.add(t)}),d.forEach(t=>n.subdocs.delete(t)),n.emit("subdocs",[{loaded:a,added:c,removed:d},n,r]),d.forEach(t=>t.destroy())),t.length<=e+1?(n._transactionCleanups=[],n.emit("afterAllTransactions",[n,t])):cleanupTransactions(t,e+1)}}},transact=(t,e,r=null,n=!0)=>{let i=t._transactionCleanups,s=!1,l=null;null===t._transaction&&(s=!0,t._transaction=new Transaction(t,r,n),i.push(t._transaction),1===i.length&&t.emit("beforeAllTransactions",[t]),t.emit("beforeTransaction",[t._transaction,t]));try{l=e(t._transaction)}finally{if(s){let e=t._transaction===i[0];t._transaction=null,e&&cleanupTransactions(i,0)}}return l};let StackItem=class StackItem{constructor(t,e){this.insertions=e,this.deletions=t,this.meta=new Map}};let clearUndoManagerStackItem=(t,e,r)=>{iterateDeletedStructs(t,r.deletions,t=>{t instanceof Item&&e.scope.some(e=>isParentOf(e,t))&&keepItem(t,!1)})},popStackItem=(t,e,r)=>{let n=null,i=t.doc,s=t.scope;if(transact(i,r=>{for(;e.length>0&&null===t.currStackItem;){let n=i.store,l=e.pop(),o=new Set,c=[],a=!1;iterateDeletedStructs(r,l.insertions,t=>{if(t instanceof Item){if(null!==t.redone){let{item:e,diff:i}=followRedone(n,t.id);i>0&&(e=getItemCleanStart(r,createID(e.id.client,e.id.clock+i))),t=e}!t.deleted&&s.some(e=>isParentOf(e,t))&&c.push(t)}}),iterateDeletedStructs(r,l.deletions,t=>{t instanceof Item&&s.some(e=>isParentOf(e,t))&&!isDeleted(l.insertions,t.id)&&o.add(t)}),o.forEach(e=>{a=null!==redoItem(r,e,o,l.insertions,t.ignoreRemoteMapChanges,t)||a});for(let e=c.length-1;e>=0;e--){let n=c[e];t.deleteFilter(n)&&(n.delete(r),a=!0)}t.currStackItem=a?l:null}r.changed.forEach((t,e)=>{t.has(null)&&e._searchMarker&&(e._searchMarker.length=0)}),n=r},t),null!=t.currStackItem){let e=n.changedParentTypes;t.emit("stack-item-popped",[{stackItem:t.currStackItem,type:r,changedParentTypes:e,origin:t},t]),t.currStackItem=null}return t.currStackItem};let UndoManager=class UndoManager extends n.g{constructor(t,{captureTimeout:e=500,captureTransaction:r=t=>!0,deleteFilter:n=()=>!0,trackedOrigins:s=new Set([null]),ignoreRemoteMapChanges:l=!1,doc:o=i.kJ(t)?t[0].doc:t.doc}={}){super(),this.scope=[],this.doc=o,this.addToScope(t),this.deleteFilter=n,s.add(this),this.trackedOrigins=s,this.captureTransaction=r,this.undoStack=[],this.redoStack=[],this.undoing=!1,this.redoing=!1,this.currStackItem=null,this.lastChange=0,this.ignoreRemoteMapChanges=l,this.captureTimeout=e,this.afterTransactionHandler=t=>{if(!this.captureTransaction(t)||!this.scope.some(e=>t.changedParentTypes.has(e))||!this.trackedOrigins.has(t.origin)&&(!t.origin||!this.trackedOrigins.has(t.origin.constructor)))return;let e=this.undoing,r=this.redoing,n=e?this.redoStack:this.undoStack;e?this.stopCapturing():r||this.clear(!1,!0);let i=new DeleteSet;t.afterState.forEach((e,r)=>{let n=t.beforeState.get(r)||0,s=e-n;s>0&&addToDeleteSet(i,r,n,s)});let s=y.ZG(),l=!1;if(this.lastChange>0&&s-this.lastChange<this.captureTimeout&&n.length>0&&!e&&!r){let e=n[n.length-1];e.deletions=mergeDeleteSets([e.deletions,t.deleteSet]),e.insertions=mergeDeleteSets([e.insertions,i])}else n.push(new StackItem(t.deleteSet,i)),l=!0;e||r||(this.lastChange=s),iterateDeletedStructs(t,t.deleteSet,t=>{t instanceof Item&&this.scope.some(e=>isParentOf(e,t))&&keepItem(t,!0)});let o=[{stackItem:n[n.length-1],origin:t.origin,type:e?"redo":"undo",changedParentTypes:t.changedParentTypes},this];l?this.emit("stack-item-added",o):this.emit("stack-item-updated",o)},this.doc.on("afterTransaction",this.afterTransactionHandler),this.doc.on("destroy",()=>{this.destroy()})}addToScope(t){(t=i.kJ(t)?t:[t]).forEach(t=>{this.scope.every(e=>e!==t)&&(t.doc!==this.doc&&m.ZK("[yjs#509] Not same Y.Doc"),this.scope.push(t))})}addTrackedOrigin(t){this.trackedOrigins.add(t)}removeTrackedOrigin(t){this.trackedOrigins.delete(t)}clear(t=!0,e=!0){(t&&this.canUndo()||e&&this.canRedo())&&this.doc.transact(r=>{t&&(this.undoStack.forEach(t=>clearUndoManagerStackItem(r,this,t)),this.undoStack=[]),e&&(this.redoStack.forEach(t=>clearUndoManagerStackItem(r,this,t)),this.redoStack=[]),this.emit("stack-cleared",[{undoStackCleared:t,redoStackCleared:e}])})}stopCapturing(){this.lastChange=0}undo(){let t;this.undoing=!0;try{t=popStackItem(this,this.undoStack,"undo")}finally{this.undoing=!1}return t}redo(){let t;this.redoing=!0;try{t=popStackItem(this,this.redoStack,"redo")}finally{this.redoing=!1}return t}canUndo(){return this.undoStack.length>0}canRedo(){return this.redoStack.length>0}destroy(){this.trackedOrigins.delete(this),this.doc.off("afterTransaction",this.afterTransactionHandler),super.destroy()}};let LazyStructReader=class LazyStructReader{constructor(t,e){this.gen=function*(t){let e=c.yg(t.restDecoder);for(let r=0;r<e;r++){let e=c.yg(t.restDecoder),r=t.readClient(),n=c.yg(t.restDecoder);for(let i=0;i<e;i++){let e=t.readInfo();if(10===e){let e=c.yg(t.restDecoder);yield new Skip(createID(r,n),e),n+=e}else if((g.kr&e)!=0){let i=(e&(g.rc|g.x1))==0,s=new Item(createID(r,n),null,(e&g.x1)===g.x1?t.readLeftID():null,null,(e&g.rc)===g.rc?t.readRightID():null,i?t.readParentInfo()?t.readString():t.readLeftID():null,i&&(e&g.cq)===g.cq?t.readString():null,readItemContent(t,e));yield s,n+=s.length}else{let e=t.readLen();yield new GC(createID(r,n),e),n+=e}}}}(t),this.curr=null,this.done=!1,this.filterSkips=e,this.next()}next(){do this.curr=this.gen.next().value||null;while(this.filterSkips&&null!==this.curr&&this.curr.constructor===Skip);return this.curr}};let LazyStructWriter=class LazyStructWriter{constructor(t){this.currClient=0,this.startClock=0,this.written=0,this.encoder=t,this.clientStructs=[]}};let mergeUpdates=t=>mergeUpdatesV2(t,UpdateDecoderV1,UpdateEncoderV1),sliceStruct=(t,e)=>{if(t.constructor===GC){let{client:r,clock:n}=t.id;return new GC(createID(r,n+e),t.length-e)}if(t.constructor===Skip){let{client:r,clock:n}=t.id;return new Skip(createID(r,n+e),t.length-e)}{let{client:r,clock:n}=t.id;return new Item(createID(r,n+e),null,createID(r,n+e-1),null,t.rightOrigin,t.parent,t.parentSub,t.content.splice(e))}},mergeUpdatesV2=(t,e=UpdateDecoderV2,r=UpdateEncoderV2)=>{if(1===t.length)return t[0];let n=t.map(t=>new e(c.l1(t))),i=n.map(t=>new LazyStructReader(t,!0)),s=null,l=new r,o=new LazyStructWriter(l);for(;(i=i.filter(t=>null!==t.curr)).sort((t,e)=>{if(t.curr.id.client!==e.curr.id.client)return e.curr.id.client-t.curr.id.client;{let r=t.curr.id.clock-e.curr.id.clock;return 0===r?t.curr.constructor===e.curr.constructor?0:t.curr.constructor===Skip?1:-1:r}}),0!==i.length;){let t=i[0],e=t.curr.id.client;if(null!==s){let r=t.curr,n=!1;for(;null!==r&&r.id.clock+r.length<=s.struct.id.clock+s.struct.length&&r.id.client>=s.struct.id.client;)r=t.next(),n=!0;if(null===r||r.id.client!==e||n&&r.id.clock>s.struct.id.clock+s.struct.length)continue;if(e!==s.struct.id.client)writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:r,offset:0},t.next();else if(s.struct.id.clock+s.struct.length<r.id.clock){if(s.struct.constructor===Skip)s.struct.length=r.id.clock+r.length-s.struct.id.clock;else{writeStructToLazyStructWriter(o,s.struct,s.offset);let t=r.id.clock-s.struct.id.clock-s.struct.length,n=new Skip(createID(e,s.struct.id.clock+s.struct.length),t);s={struct:n,offset:0}}}else{let e=s.struct.id.clock+s.struct.length-r.id.clock;e>0&&(s.struct.constructor===Skip?s.struct.length-=e:r=sliceStruct(r,e)),s.struct.mergeWith(r)||(writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:r,offset:0},t.next())}}else s={struct:t.curr,offset:0},t.next();for(let r=t.curr;null!==r&&r.id.client===e&&r.id.clock===s.struct.id.clock+s.struct.length&&r.constructor!==Skip;r=t.next())writeStructToLazyStructWriter(o,s.struct,s.offset),s={struct:r,offset:0}}null!==s&&(writeStructToLazyStructWriter(o,s.struct,s.offset),s=null),finishLazyStructWriting(o);let a=n.map(t=>readDeleteSet(t)),d=mergeDeleteSets(a);return writeDeleteSet(l,d),l.toUint8Array()},diffUpdateV2=(t,e,r=UpdateDecoderV2,n=UpdateEncoderV2)=>{let i=decodeStateVector(e),l=new n,o=new LazyStructWriter(l),a=new r(c.l1(t)),d=new LazyStructReader(a,!1);for(;d.curr;){let t=d.curr,e=t.id.client,r=i.get(e)||0;if(d.curr.constructor===Skip){d.next();continue}if(t.id.clock+t.length>r)for(writeStructToLazyStructWriter(o,t,s.Fp(r-t.id.clock,0)),d.next();d.curr&&d.curr.id.client===e;)writeStructToLazyStructWriter(o,d.curr,0),d.next();else for(;d.curr&&d.curr.id.client===e&&d.curr.id.clock+d.curr.length<=r;)d.next()}finishLazyStructWriting(o);let h=readDeleteSet(a);return writeDeleteSet(l,h),l.toUint8Array()},flushLazyStructWriter=t=>{t.written>0&&(t.clientStructs.push({written:t.written,restEncoder:o._f(t.encoder.restEncoder)}),t.encoder.restEncoder=o.Mf(),t.written=0)},writeStructToLazyStructWriter=(t,e,r)=>{t.written>0&&t.currClient!==e.id.client&&flushLazyStructWriter(t),0===t.written&&(t.currClient=e.id.client,t.encoder.writeClient(e.id.client),o.uE(t.encoder.restEncoder,e.id.clock+r)),e.write(t.encoder,r),t.written++},finishLazyStructWriting=t=>{flushLazyStructWriter(t);let e=t.encoder.restEncoder;o.uE(e,t.clientStructs.length);for(let r=0;r<t.clientStructs.length;r++){let n=t.clientStructs[r];o.uE(e,n.written),o.HK(e,n.restEncoder)}},convertUpdateFormat=(t,e,r,n)=>{let i=new r(c.l1(t)),s=new LazyStructReader(i,!1),l=new n,o=new LazyStructWriter(l);for(let t=s.curr;null!==t;t=s.next())writeStructToLazyStructWriter(o,e(t),0);finishLazyStructWriting(o);let a=readDeleteSet(i);return writeDeleteSet(l,a),l.toUint8Array()},convertUpdateFormatV2ToV1=t=>convertUpdateFormat(t,p.id,UpdateDecoderV2,UpdateEncoderV1),_="You must not compute changes after the event-handler fired.";let YEvent=class YEvent{constructor(t,e){this.target=t,this.currentTarget=t,this.transaction=e,this._changes=null,this._keys=null,this._delta=null,this._path=null}get path(){return this._path||(this._path=getPathTo(this.currentTarget,this.target))}deletes(t){return isDeleted(this.transaction.deleteSet,t.id)}get keys(){if(null===this._keys){if(0===this.transaction.doc._transactionCleanups.length)throw u.Ue(_);let t=new Map,e=this.target,r=this.transaction.changed.get(e);r.forEach(r=>{if(null!==r){let n,s;let l=e._map.get(r);if(this.adds(l)){let t=l.left;for(;null!==t&&this.adds(t);)t=t.left;if(this.deletes(l)){if(!(null!==t&&this.deletes(t)))return;n="delete",s=i.Z$(t.content.getContent())}else null!==t&&this.deletes(t)?(n="update",s=i.Z$(t.content.getContent())):(n="add",s=void 0)}else{if(!this.deletes(l))return;n="delete",s=i.Z$(l.content.getContent())}t.set(r,{action:n,oldValue:s})}}),this._keys=t}return this._keys}get delta(){return this.changes.delta}adds(t){return t.id.clock>=(this.transaction.beforeState.get(t.id.client)||0)}get changes(){let t=this._changes;if(null===t){if(0===this.transaction.doc._transactionCleanups.length)throw u.Ue(_);let e=this.target,r=f.Ue(),n=f.Ue(),i=[];t={added:r,deleted:n,delta:i,keys:this.keys};let s=this.transaction.changed.get(e);if(s.has(null)){let t=null,packOp=()=>{t&&i.push(t)};for(let i=e._start;null!==i;i=i.right)i.deleted?this.deletes(i)&&!this.adds(i)&&((null===t||void 0===t.delete)&&(packOp(),t={delete:0}),t.delete+=i.length,n.add(i)):this.adds(i)?((null===t||void 0===t.insert)&&(packOp(),t={insert:[]}),t.insert=t.insert.concat(i.content.getContent()),r.add(i)):((null===t||void 0===t.retain)&&(packOp(),t={retain:0}),t.retain+=i.length);null!==t&&void 0===t.retain&&packOp()}this._changes=t}return t}};let getPathTo=(t,e)=>{let r=[];for(;null!==e._item&&e!==t;){if(null!==e._item.parentSub)r.unshift(e._item.parentSub);else{let t=0,n=e._item.parent._start;for(;n!==e._item&&null!==n;)!n.deleted&&t++,n=n.right;r.unshift(t)}e=e._item.parent}return r},C=0;let ArraySearchMarker=class ArraySearchMarker{constructor(t,e){t.marker=!0,this.p=t,this.index=e,this.timestamp=C++}};let refreshMarkerTimestamp=t=>{t.timestamp=C++},overwriteMarker=(t,e,r)=>{t.p.marker=!1,t.p=e,e.marker=!0,t.index=r,t.timestamp=C++},markPosition=(t,e,r)=>{if(t.length>=80){let n=t.reduce((t,e)=>t.timestamp<e.timestamp?t:e);return overwriteMarker(n,e,r),n}{let n=new ArraySearchMarker(e,r);return t.push(n),n}},findMarker=(t,e)=>{if(null===t._start||0===e||null===t._searchMarker)return null;let r=0===t._searchMarker.length?null:t._searchMarker.reduce((t,r)=>s.Wn(e-t.index)<s.Wn(e-r.index)?t:r),n=t._start,i=0;for(null!==r&&(n=r.p,i=r.index,refreshMarkerTimestamp(r));null!==n.right&&i<e;){if(!n.deleted&&n.countable){if(e<i+n.length)break;i+=n.length}n=n.right}for(;null!==n.left&&i>e;)!(n=n.left).deleted&&n.countable&&(i-=n.length);for(;null!==n.left&&n.left.id.client===n.id.client&&n.left.id.clock+n.left.length===n.id.clock;)!(n=n.left).deleted&&n.countable&&(i-=n.length);return null!==r&&s.Wn(r.index-i)<n.parent.length/80?(overwriteMarker(r,n,i),r):markPosition(t._searchMarker,n,i)},updateMarkerChanges=(t,e,r)=>{for(let n=t.length-1;n>=0;n--){let i=t[n];if(r>0){let e=i.p;for(e.marker=!1;e&&(e.deleted||!e.countable);)(e=e.left)&&!e.deleted&&e.countable&&(i.index-=e.length);if(null===e||!0===e.marker){t.splice(n,1);continue}i.p=e,e.marker=!0}(e<i.index||r>0&&e===i.index)&&(i.index=s.Fp(e,i.index+r))}},callTypeObservers=(t,e,r)=>{let n=t,i=e.changedParentTypes;for(;l.Yu(i,t,()=>[]).push(r),null!==t._item;)t=t._item.parent;callEventHandlerListeners(n._eH,r,e)};let AbstractType=class AbstractType{constructor(){this._item=null,this._map=new Map,this._start=null,this.doc=null,this._length=0,this._eH=createEventHandler(),this._dEH=createEventHandler(),this._searchMarker=null}get parent(){return this._item?this._item.parent:null}_integrate(t,e){this.doc=t,this._item=e}_copy(){throw u.Nw()}clone(){throw u.Nw()}_write(t){}get _first(){let t=this._start;for(;null!==t&&t.deleted;)t=t.right;return t}_callObserver(t,e){!t.local&&this._searchMarker&&(this._searchMarker.length=0)}observe(t){addEventHandlerListener(this._eH,t)}observeDeep(t){addEventHandlerListener(this._dEH,t)}unobserve(t){removeEventHandlerListener(this._eH,t)}unobserveDeep(t){removeEventHandlerListener(this._dEH,t)}toJSON(){}};let typeListSlice=(t,e,r)=>{e<0&&(e=t._length+e),r<0&&(r=t._length+r);let n=r-e,i=[],s=t._start;for(;null!==s&&n>0;){if(s.countable&&!s.deleted){let t=s.content.getContent();if(t.length<=e)e-=t.length;else{for(let r=e;r<t.length&&n>0;r++)i.push(t[r]),n--;e=0}}s=s.right}return i},typeListToArray=t=>{let e=[],r=t._start;for(;null!==r;){if(r.countable&&!r.deleted){let t=r.content.getContent();for(let r=0;r<t.length;r++)e.push(t[r])}r=r.right}return e},typeListToArraySnapshot=(t,e)=>{let r=[],n=t._start;for(;null!==n;){if(n.countable&&isVisible(n,e)){let t=n.content.getContent();for(let e=0;e<t.length;e++)r.push(t[e])}n=n.right}return r},typeListForEach=(t,e)=>{let r=0,n=t._start;for(;null!==n;){if(n.countable&&!n.deleted){let i=n.content.getContent();for(let n=0;n<i.length;n++)e(i[n],r++,t)}n=n.right}},typeListMap=(t,e)=>{let r=[];return typeListForEach(t,(n,i)=>{r.push(e(n,i,t))}),r},typeListCreateIterator=t=>{let e=t._start,r=null,n=0;return{[Symbol.iterator](){return this},next:()=>{if(null===r){for(;null!==e&&e.deleted;)e=e.right;if(null===e)return{done:!0,value:void 0};r=e.content.getContent(),n=0,e=e.right}let t=r[n++];return r.length<=n&&(r=null),{done:!1,value:t}}}},typeListGet=(t,e)=>{let r=findMarker(t,e),n=t._start;for(null!==r&&(n=r.p,e-=r.index);null!==n;n=n.right)if(!n.deleted&&n.countable){if(e<n.length)return n.content.getContent()[e];e-=n.length}},typeListInsertGenericsAfter=(t,e,r,n)=>{let i=r,s=t.doc,l=s.clientID,o=s.store,c=null===r?e._start:r.right,a=[],packJsonContent=()=>{a.length>0&&((i=new Item(createID(l,getState(o,l)),i,i&&i.lastId,c,c&&c.id,e,null,new ContentAny(a))).integrate(t,0),a=[])};n.forEach(r=>{if(null===r)a.push(r);else switch(r.constructor){case Number:case Object:case Boolean:case Array:case String:a.push(r);break;default:switch(packJsonContent(),r.constructor){case Uint8Array:case ArrayBuffer:(i=new Item(createID(l,getState(o,l)),i,i&&i.lastId,c,c&&c.id,e,null,new ContentBinary(new Uint8Array(r)))).integrate(t,0);break;case Doc:(i=new Item(createID(l,getState(o,l)),i,i&&i.lastId,c,c&&c.id,e,null,new ContentDoc(r))).integrate(t,0);break;default:if(r instanceof AbstractType)(i=new Item(createID(l,getState(o,l)),i,i&&i.lastId,c,c&&c.id,e,null,new ContentType(r))).integrate(t,0);else throw Error("Unexpected content type in insert operation")}}}),packJsonContent()},lengthExceeded=()=>u.Ue("Length exceeded!"),typeListInsertGenerics=(t,e,r,n)=>{if(r>e._length)throw lengthExceeded();if(0===r)return e._searchMarker&&updateMarkerChanges(e._searchMarker,r,n.length),typeListInsertGenericsAfter(t,e,null,n);let i=r,s=findMarker(e,r),l=e._start;for(null!==s&&(l=s.p,0==(r-=s.index)&&(r+=(l=l.prev)&&l.countable&&!l.deleted?l.length:0));null!==l;l=l.right)if(!l.deleted&&l.countable){if(r<=l.length){r<l.length&&getItemCleanStart(t,createID(l.id.client,l.id.clock+r));break}r-=l.length}return e._searchMarker&&updateMarkerChanges(e._searchMarker,i,n.length),typeListInsertGenericsAfter(t,e,l,n)},typeListPushGenerics=(t,e,r)=>{let n=(e._searchMarker||[]).reduce((t,e)=>e.index>t.index?e:t,{index:0,p:e._start}),i=n.p;if(i)for(;i.right;)i=i.right;return typeListInsertGenericsAfter(t,e,i,r)},typeListDelete=(t,e,r,n)=>{if(0===n)return;let i=r,s=n,l=findMarker(e,r),o=e._start;for(null!==l&&(o=l.p,r-=l.index);null!==o&&r>0;o=o.right)!o.deleted&&o.countable&&(r<o.length&&getItemCleanStart(t,createID(o.id.client,o.id.clock+r)),r-=o.length);for(;n>0&&null!==o;)o.deleted||(n<o.length&&getItemCleanStart(t,createID(o.id.client,o.id.clock+n)),o.delete(t),n-=o.length),o=o.right;if(n>0)throw lengthExceeded();e._searchMarker&&updateMarkerChanges(e._searchMarker,i,-s+n)},typeMapDelete=(t,e,r)=>{let n=e._map.get(r);void 0!==n&&n.delete(t)},typeMapSet=(t,e,r,n)=>{let i;let s=e._map.get(r)||null,l=t.doc,o=l.clientID;if(null==n)i=new ContentAny([n]);else switch(n.constructor){case Number:case Object:case Boolean:case Array:case String:i=new ContentAny([n]);break;case Uint8Array:i=new ContentBinary(n);break;case Doc:i=new ContentDoc(n);break;default:if(n instanceof AbstractType)i=new ContentType(n);else throw Error("Unexpected content type")}new Item(createID(o,getState(l.store,o)),s,s&&s.lastId,null,null,e,r,i).integrate(t,0)},typeMapGet=(t,e)=>{let r=t._map.get(e);return void 0===r||r.deleted?void 0:r.content.getContent()[r.length-1]},typeMapGetAll=t=>{let e={};return t._map.forEach((t,r)=>{t.deleted||(e[r]=t.content.getContent()[t.length-1])}),e},typeMapHas=(t,e)=>{let r=t._map.get(e);return void 0!==r&&!r.deleted},typeMapGetAllSnapshot=(t,e)=>{let r={};return t._map.forEach((t,n)=>{let i=t;for(;null!==i&&(!e.sv.has(i.id.client)||i.id.clock>=(e.sv.get(i.id.client)||0));)i=i.left;null!==i&&isVisible(i,e)&&(r[n]=i.content.getContent()[i.length-1])}),r},createMapIterator=t=>w.BG(t.entries(),t=>!t[1].deleted);let YArrayEvent=class YArrayEvent extends YEvent{constructor(t,e){super(t,e),this._transaction=e}};let YArray=class YArray extends AbstractType{constructor(){super(),this._prelimContent=[],this._searchMarker=[]}static from(t){let e=new YArray;return e.push(t),e}_integrate(t,e){super._integrate(t,e),this.insert(0,this._prelimContent),this._prelimContent=null}_copy(){return new YArray}clone(){let t=new YArray;return t.insert(0,this.toArray().map(t=>t instanceof AbstractType?t.clone():t)),t}get length(){return null===this._prelimContent?this._length:this._prelimContent.length}_callObserver(t,e){super._callObserver(t,e),callTypeObservers(this,t,new YArrayEvent(this,t))}insert(t,e){null!==this.doc?transact(this.doc,r=>{typeListInsertGenerics(r,this,t,e)}):this._prelimContent.splice(t,0,...e)}push(t){null!==this.doc?transact(this.doc,e=>{typeListPushGenerics(e,this,t)}):this._prelimContent.push(...t)}unshift(t){this.insert(0,t)}delete(t,e=1){null!==this.doc?transact(this.doc,r=>{typeListDelete(r,this,t,e)}):this._prelimContent.splice(t,e)}get(t){return typeListGet(this,t)}toArray(){return typeListToArray(this)}slice(t=0,e=this.length){return typeListSlice(this,t,e)}toJSON(){return this.map(t=>t instanceof AbstractType?t.toJSON():t)}map(t){return typeListMap(this,t)}forEach(t){typeListForEach(this,t)}[Symbol.iterator](){return typeListCreateIterator(this)}_write(t){t.writeTypeRef(I)}};let YMapEvent=class YMapEvent extends YEvent{constructor(t,e,r){super(t,e),this.keysChanged=r}};let YMap=class YMap extends AbstractType{constructor(t){super(),this._prelimContent=null,void 0===t?this._prelimContent=new Map:this._prelimContent=new Map(t)}_integrate(t,e){super._integrate(t,e),this._prelimContent.forEach((t,e)=>{this.set(e,t)}),this._prelimContent=null}_copy(){return new YMap}clone(){let t=new YMap;return this.forEach((e,r)=>{t.set(r,e instanceof AbstractType?e.clone():e)}),t}_callObserver(t,e){callTypeObservers(this,t,new YMapEvent(this,t,e))}toJSON(){let t={};return this._map.forEach((e,r)=>{if(!e.deleted){let n=e.content.getContent()[e.length-1];t[r]=n instanceof AbstractType?n.toJSON():n}}),t}get size(){return[...createMapIterator(this._map)].length}keys(){return w.CA(createMapIterator(this._map),t=>t[0])}values(){return w.CA(createMapIterator(this._map),t=>t[1].content.getContent()[t[1].length-1])}entries(){return w.CA(createMapIterator(this._map),t=>[t[0],t[1].content.getContent()[t[1].length-1]])}forEach(t){this._map.forEach((e,r)=>{e.deleted||t(e.content.getContent()[e.length-1],r,this)})}[Symbol.iterator](){return this.entries()}delete(t){null!==this.doc?transact(this.doc,e=>{typeMapDelete(e,this,t)}):this._prelimContent.delete(t)}set(t,e){return null!==this.doc?transact(this.doc,r=>{typeMapSet(r,this,t,e)}):this._prelimContent.set(t,e),e}get(t){return typeMapGet(this,t)}has(t){return typeMapHas(this,t)}clear(){null!==this.doc?transact(this.doc,t=>{this.forEach(function(e,r,n){typeMapDelete(t,n,r)})}):this._prelimContent.clear()}_write(t){t.writeTypeRef(E)}};let equalAttrs=(t,e)=>t===e||"object"==typeof t&&"object"==typeof e&&t&&e&&k.$m(t,e);let ItemTextListPosition=class ItemTextListPosition{constructor(t,e,r,n){this.left=t,this.right=e,this.index=r,this.currentAttributes=n}forward(){(null===this.right&&u.zR(),this.right.content.constructor===ContentFormat)?this.right.deleted||updateCurrentAttributes(this.currentAttributes,this.right.content):this.right.deleted||(this.index+=this.right.length),this.left=this.right,this.right=this.right.right}};let findNextPosition=(t,e,r)=>{for(;null!==e.right&&r>0;)e.right.content.constructor===ContentFormat?e.right.deleted||updateCurrentAttributes(e.currentAttributes,e.right.content):e.right.deleted||(r<e.right.length&&getItemCleanStart(t,createID(e.right.id.client,e.right.id.clock+r)),e.index+=e.right.length,r-=e.right.length),e.left=e.right,e.right=e.right.right;return e},findPosition=(t,e,r,n)=>{let i=new Map,s=n?findMarker(e,r):null;if(s){let e=new ItemTextListPosition(s.p.left,s.p,s.index,i);return findNextPosition(t,e,r-s.index)}{let n=new ItemTextListPosition(null,e._start,0,i);return findNextPosition(t,n,r)}},insertNegatedAttributes=(t,e,r,n)=>{for(;null!==r.right&&(!0===r.right.deleted||r.right.content.constructor===ContentFormat&&equalAttrs(n.get(r.right.content.key),r.right.content.value));)r.right.deleted||n.delete(r.right.content.key),r.forward();let i=t.doc,s=i.clientID;n.forEach((n,l)=>{let o=r.left,c=r.right,a=new Item(createID(s,getState(i.store,s)),o,o&&o.lastId,c,c&&c.id,e,null,new ContentFormat(l,n));a.integrate(t,0),r.right=a,r.forward()})},updateCurrentAttributes=(t,e)=>{let{key:r,value:n}=e;null===n?t.delete(r):t.set(r,n)},minimizeAttributeChanges=(t,e)=>{for(;null!==t.right&&(t.right.deleted||t.right.content.constructor===ContentFormat&&equalAttrs(e[t.right.content.key]??null,t.right.content.value));)t.forward()},insertAttributes=(t,e,r,n)=>{let i=t.doc,s=i.clientID,l=new Map;for(let o in n){let c=n[o],a=r.currentAttributes.get(o)??null;if(!equalAttrs(a,c)){l.set(o,a);let{left:n,right:d}=r;r.right=new Item(createID(s,getState(i.store,s)),n,n&&n.lastId,d,d&&d.id,e,null,new ContentFormat(o,c)),r.right.integrate(t,0),r.forward()}}return l},insertText=(t,e,r,n,i)=>{r.currentAttributes.forEach((t,e)=>{void 0===i[e]&&(i[e]=null)});let s=t.doc,l=s.clientID;minimizeAttributeChanges(r,i);let o=insertAttributes(t,e,r,i),c=n.constructor===String?new ContentString(n):n instanceof AbstractType?new ContentType(n):new ContentEmbed(n),{left:a,right:d,index:h}=r;e._searchMarker&&updateMarkerChanges(e._searchMarker,r.index,c.getLength()),(d=new Item(createID(l,getState(s.store,l)),a,a&&a.lastId,d,d&&d.id,e,null,c)).integrate(t,0),r.right=d,r.index=h,r.forward(),insertNegatedAttributes(t,e,r,o)},formatText=(t,e,r,n,i)=>{let s=t.doc,l=s.clientID;minimizeAttributeChanges(r,i);let o=insertAttributes(t,e,r,i);for(;null!==r.right&&(n>0||o.size>0&&(r.right.deleted||r.right.content.constructor===ContentFormat));){if(!r.right.deleted){if(r.right.content.constructor===ContentFormat){let{key:e,value:s}=r.right.content,l=i[e];if(void 0!==l){if(equalAttrs(l,s))o.delete(e);else{if(0===n)break;o.set(e,s)}r.right.delete(t)}else r.currentAttributes.set(e,s)}else n<r.right.length&&getItemCleanStart(t,createID(r.right.id.client,r.right.id.clock+n)),n-=r.right.length}r.forward()}if(n>0){let i="";for(;n>0;n--)i+="\n";r.right=new Item(createID(l,getState(s.store,l)),r.left,r.left&&r.left.lastId,r.right,r.right&&r.right.id,e,null,new ContentString(i)),r.right.integrate(t,0),r.forward()}insertNegatedAttributes(t,e,r,o)},cleanupFormattingGap=(t,e,r,n,i)=>{let s=e,o=l.Ue();for(;s&&(!s.countable||s.deleted);){if(!s.deleted&&s.content.constructor===ContentFormat){let t=s.content;o.set(t.key,t)}s=s.right}let c=0,a=!1;for(;e!==s;){if(r===e&&(a=!0),!e.deleted){let r=e.content;if(r.constructor===ContentFormat){let{key:s,value:l}=r,d=n.get(s)??null;o.get(s)===r&&d!==l||(e.delete(t),c++,a||(i.get(s)??null)!==l||d===l||(null===d?i.delete(s):i.set(s,d))),a||e.deleted||updateCurrentAttributes(i,r)}}e=e.right}return c},cleanupContextlessFormattingGap=(t,e)=>{for(;e&&e.right&&(e.right.deleted||!e.right.countable);)e=e.right;let r=new Set;for(;e&&(e.deleted||!e.countable);){if(!e.deleted&&e.content.constructor===ContentFormat){let n=e.content.key;r.has(n)?e.delete(t):r.add(n)}e=e.left}},cleanupYTextFormatting=t=>{let e=0;return transact(t.doc,r=>{let n=t._start,i=t._start,s=l.Ue(),o=l.JG(s);for(;i;)!1===i.deleted&&(i.content.constructor===ContentFormat?updateCurrentAttributes(o,i.content):(e+=cleanupFormattingGap(r,n,i,s,o),s=l.JG(o),n=i)),i=i.right}),e},cleanupYTextAfterTransaction=t=>{let e=new Set,r=t.doc;for(let[n,i]of t.afterState.entries()){let s=t.beforeState.get(n)||0;i!==s&&iterateStructs(t,r.store.clients.get(n),s,i,t=>{t.deleted||t.content.constructor!==ContentFormat||t.constructor===GC||e.add(t.parent)})}transact(r,r=>{for(let n of(iterateDeletedStructs(t,t.deleteSet,t=>{if(t instanceof GC||!t.parent._hasFormatting||e.has(t.parent))return;let n=t.parent;t.content.constructor===ContentFormat?e.add(n):cleanupContextlessFormattingGap(r,t)}),e))cleanupYTextFormatting(n)})},deleteText=(t,e,r)=>{let n=r,i=l.JG(e.currentAttributes),s=e.right;for(;r>0&&null!==e.right;){if(!1===e.right.deleted)switch(e.right.content.constructor){case ContentType:case ContentEmbed:case ContentString:r<e.right.length&&getItemCleanStart(t,createID(e.right.id.client,e.right.id.clock+r)),r-=e.right.length,e.right.delete(t)}e.forward()}s&&cleanupFormattingGap(t,s,e.right,i,e.currentAttributes);let o=(e.left||e.right).parent;return o._searchMarker&&updateMarkerChanges(o._searchMarker,e.index,-n+r),e};let YTextEvent=class YTextEvent extends YEvent{constructor(t,e,r){super(t,e),this.childListChanged=!1,this.keysChanged=new Set,r.forEach(t=>{null===t?this.childListChanged=!0:this.keysChanged.add(t)})}get changes(){if(null===this._changes){let t={keys:this.keys,delta:this.delta,added:new Set,deleted:new Set};this._changes=t}return this._changes}get delta(){if(null===this._delta){let t=this.target.doc,e=[];transact(t,t=>{let r=new Map,n=new Map,i=this.target._start,s=null,l={},o="",c=0,a=0,addOp=()=>{if(null!==s){let t=null;switch(s){case"delete":a>0&&(t={delete:a}),a=0;break;case"insert":("object"==typeof o||o.length>0)&&(t={insert:o},r.size>0&&(t.attributes={},r.forEach((e,r)=>{null!==e&&(t.attributes[r]=e)}))),o="";break;case"retain":c>0&&(t={retain:c},k.xb(l)||(t.attributes=k.f0({},l))),c=0}t&&e.push(t),s=null}};for(;null!==i;){switch(i.content.constructor){case ContentType:case ContentEmbed:this.adds(i)?this.deletes(i)||(addOp(),s="insert",o=i.content.getContent()[0],addOp()):this.deletes(i)?("delete"!==s&&(addOp(),s="delete"),a+=1):i.deleted||("retain"!==s&&(addOp(),s="retain"),c+=1);break;case ContentString:this.adds(i)?this.deletes(i)||("insert"!==s&&(addOp(),s="insert"),o+=i.content.str):this.deletes(i)?("delete"!==s&&(addOp(),s="delete"),a+=i.length):i.deleted||("retain"!==s&&(addOp(),s="retain"),c+=i.length);break;case ContentFormat:{let{key:e,value:o}=i.content;if(this.adds(i)){if(!this.deletes(i)){let c=r.get(e)??null;equalAttrs(c,o)?null!==o&&i.delete(t):("retain"===s&&addOp(),equalAttrs(o,n.get(e)??null)?delete l[e]:l[e]=o)}}else if(this.deletes(i)){n.set(e,o);let t=r.get(e)??null;equalAttrs(t,o)||("retain"===s&&addOp(),l[e]=t)}else if(!i.deleted){n.set(e,o);let r=l[e];void 0!==r&&(equalAttrs(r,o)?null!==r&&i.delete(t):("retain"===s&&addOp(),null===o?delete l[e]:l[e]=o))}i.deleted||("insert"===s&&addOp(),updateCurrentAttributes(r,i.content))}}i=i.right}for(addOp();e.length>0;){let t=e[e.length-1];if(void 0!==t.retain&&void 0===t.attributes)e.pop();else break}}),this._delta=e}return this._delta}};let YText=class YText extends AbstractType{constructor(t){super(),this._pending=void 0!==t?[()=>this.insert(0,t)]:[],this._searchMarker=[],this._hasFormatting=!1}get length(){return this._length}_integrate(t,e){super._integrate(t,e);try{this._pending.forEach(t=>t())}catch(t){console.error(t)}this._pending=null}_copy(){return new YText}clone(){let t=new YText;return t.applyDelta(this.toDelta()),t}_callObserver(t,e){super._callObserver(t,e);let r=new YTextEvent(this,t,e);callTypeObservers(this,t,r),!t.local&&this._hasFormatting&&(t._needFormattingCleanup=!0)}toString(){let t="",e=this._start;for(;null!==e;)!e.deleted&&e.countable&&e.content.constructor===ContentString&&(t+=e.content.str),e=e.right;return t}toJSON(){return this.toString()}applyDelta(t,{sanitize:e=!0}={}){null!==this.doc?transact(this.doc,r=>{let n=new ItemTextListPosition(null,this._start,0,new Map);for(let i=0;i<t.length;i++){let s=t[i];if(void 0!==s.insert){let l=e||"string"!=typeof s.insert||i!==t.length-1||null!==n.right||"\n"!==s.insert.slice(-1)?s.insert:s.insert.slice(0,-1);("string"!=typeof l||l.length>0)&&insertText(r,this,n,l,s.attributes||{})}else void 0!==s.retain?formatText(r,this,n,s.retain,s.attributes||{}):void 0!==s.delete&&deleteText(r,n,s.delete)}}):this._pending.push(()=>this.applyDelta(t))}toDelta(t,e,r){let n=[],i=new Map,s=this.doc,l="",o=this._start;function packStr(){if(l.length>0){let t={},e=!1;i.forEach((r,n)=>{e=!0,t[n]=r});let r={insert:l};e&&(r.attributes=t),n.push(r),l=""}}let computeDelta=()=>{for(;null!==o;){if(isVisible(o,t)||void 0!==e&&isVisible(o,e))switch(o.content.constructor){case ContentString:{let n=i.get("ychange");void 0===t||isVisible(o,t)?void 0===e||isVisible(o,e)?void 0!==n&&(packStr(),i.delete("ychange")):(void 0===n||n.user!==o.id.client||"added"!==n.type)&&(packStr(),i.set("ychange",r?r("added",o.id):{type:"added"})):(void 0===n||n.user!==o.id.client||"removed"!==n.type)&&(packStr(),i.set("ychange",r?r("removed",o.id):{type:"removed"})),l+=o.content.str;break}case ContentType:case ContentEmbed:{packStr();let t={insert:o.content.getContent()[0]};if(i.size>0){let e={};t.attributes=e,i.forEach((t,r)=>{e[r]=t})}n.push(t);break}case ContentFormat:isVisible(o,t)&&(packStr(),updateCurrentAttributes(i,o.content))}o=o.right}packStr()};return t||e?transact(s,r=>{t&&splitSnapshotAffectedStructs(r,t),e&&splitSnapshotAffectedStructs(r,e),computeDelta()},"cleanup"):computeDelta(),n}insert(t,e,r){if(e.length<=0)return;let n=this.doc;null!==n?transact(n,n=>{let i=findPosition(n,this,t,!r);r||(r={},i.currentAttributes.forEach((t,e)=>{r[e]=t})),insertText(n,this,i,e,r)}):this._pending.push(()=>this.insert(t,e,r))}insertEmbed(t,e,r){let n=this.doc;null!==n?transact(n,n=>{let i=findPosition(n,this,t,!r);insertText(n,this,i,e,r||{})}):this._pending.push(()=>this.insertEmbed(t,e,r||{}))}delete(t,e){if(0===e)return;let r=this.doc;null!==r?transact(r,r=>{deleteText(r,findPosition(r,this,t,!0),e)}):this._pending.push(()=>this.delete(t,e))}format(t,e,r){if(0===e)return;let n=this.doc;null!==n?transact(n,n=>{let i=findPosition(n,this,t,!1);null!==i.right&&formatText(n,this,i,e,r)}):this._pending.push(()=>this.format(t,e,r))}removeAttribute(t){null!==this.doc?transact(this.doc,e=>{typeMapDelete(e,this,t)}):this._pending.push(()=>this.removeAttribute(t))}setAttribute(t,e){null!==this.doc?transact(this.doc,r=>{typeMapSet(r,this,t,e)}):this._pending.push(()=>this.setAttribute(t,e))}getAttribute(t){return typeMapGet(this,t)}getAttributes(){return typeMapGetAll(this)}_write(t){t.writeTypeRef(A)}};let YXmlTreeWalker=class YXmlTreeWalker{constructor(t,e=()=>!0){this._filter=e,this._root=t,this._currentNode=t._start,this._firstCall=!0}[Symbol.iterator](){return this}next(){let t=this._currentNode,e=t&&t.content&&t.content.type;if(null!==t&&(!this._firstCall||t.deleted||!this._filter(e)))do if(e=t.content.type,t.deleted||e.constructor!==YXmlElement&&e.constructor!==YXmlFragment||null===e._start)for(;null!==t;){if(null!==t.right){t=t.right;break}t=t.parent===this._root?null:t.parent._item}else t=e._start;while(null!==t&&(t.deleted||!this._filter(t.content.type)));return(this._firstCall=!1,null===t)?{value:void 0,done:!0}:(this._currentNode=t,{value:t.content.type,done:!1})}};let YXmlFragment=class YXmlFragment extends AbstractType{constructor(){super(),this._prelimContent=[]}get firstChild(){let t=this._first;return t?t.content.getContent()[0]:null}_integrate(t,e){super._integrate(t,e),this.insert(0,this._prelimContent),this._prelimContent=null}_copy(){return new YXmlFragment}clone(){let t=new YXmlFragment;return t.insert(0,this.toArray().map(t=>t instanceof AbstractType?t.clone():t)),t}get length(){return null===this._prelimContent?this._length:this._prelimContent.length}createTreeWalker(t){return new YXmlTreeWalker(this,t)}querySelector(t){t=t.toUpperCase();let e=new YXmlTreeWalker(this,e=>e.nodeName&&e.nodeName.toUpperCase()===t),r=e.next();return r.done?null:r.value}querySelectorAll(t){return t=t.toUpperCase(),i.Dp(new YXmlTreeWalker(this,e=>e.nodeName&&e.nodeName.toUpperCase()===t))}_callObserver(t,e){callTypeObservers(this,t,new YXmlEvent(this,e,t))}toString(){return typeListMap(this,t=>t.toString()).join("")}toJSON(){return this.toString()}toDOM(t=document,e={},r){let n=t.createDocumentFragment();return void 0!==r&&r._createAssociation(n,this),typeListForEach(this,i=>{n.insertBefore(i.toDOM(t,e,r),null)}),n}insert(t,e){null!==this.doc?transact(this.doc,r=>{typeListInsertGenerics(r,this,t,e)}):this._prelimContent.splice(t,0,...e)}insertAfter(t,e){if(null!==this.doc)transact(this.doc,r=>{let n=t&&t instanceof AbstractType?t._item:t;typeListInsertGenericsAfter(r,this,n,e)});else{let r=this._prelimContent,n=null===t?0:r.findIndex(e=>e===t)+1;if(0===n&&null!==t)throw u.Ue("Reference item not found");r.splice(n,0,...e)}}delete(t,e=1){null!==this.doc?transact(this.doc,r=>{typeListDelete(r,this,t,e)}):this._prelimContent.splice(t,e)}toArray(){return typeListToArray(this)}push(t){this.insert(this.length,t)}unshift(t){this.insert(0,t)}get(t){return typeListGet(this,t)}slice(t=0,e=this.length){return typeListSlice(this,t,e)}forEach(t){typeListForEach(this,t)}_write(t){t.writeTypeRef(v)}};let YXmlElement=class YXmlElement extends YXmlFragment{constructor(t="UNDEFINED"){super(),this.nodeName=t,this._prelimAttrs=new Map}get nextSibling(){let t=this._item?this._item.next:null;return t?t.content.type:null}get prevSibling(){let t=this._item?this._item.prev:null;return t?t.content.type:null}_integrate(t,e){super._integrate(t,e),this._prelimAttrs.forEach((t,e)=>{this.setAttribute(e,t)}),this._prelimAttrs=null}_copy(){return new YXmlElement(this.nodeName)}clone(){let t=new YXmlElement(this.nodeName),e=this.getAttributes();return k.Ed(e,(e,r)=>{"string"==typeof e&&t.setAttribute(r,e)}),t.insert(0,this.toArray().map(t=>t instanceof AbstractType?t.clone():t)),t}toString(){let t=this.getAttributes(),e=[],r=[];for(let e in t)r.push(e);r.sort();let n=r.length;for(let i=0;i<n;i++){let n=r[i];e.push(n+'="'+t[n]+'"')}let i=this.nodeName.toLocaleLowerCase(),s=e.length>0?" "+e.join(" "):"";return`<${i}${s}>${super.toString()}</${i}>`}removeAttribute(t){null!==this.doc?transact(this.doc,e=>{typeMapDelete(e,this,t)}):this._prelimAttrs.delete(t)}setAttribute(t,e){null!==this.doc?transact(this.doc,r=>{typeMapSet(r,this,t,e)}):this._prelimAttrs.set(t,e)}getAttribute(t){return typeMapGet(this,t)}hasAttribute(t){return typeMapHas(this,t)}getAttributes(t){return t?typeMapGetAllSnapshot(this,t):typeMapGetAll(this)}toDOM(t=document,e={},r){let n=t.createElement(this.nodeName),i=this.getAttributes();for(let t in i){let e=i[t];"string"==typeof e&&n.setAttribute(t,e)}return typeListForEach(this,i=>{n.appendChild(i.toDOM(t,e,r))}),void 0!==r&&r._createAssociation(n,this),n}_write(t){t.writeTypeRef(T),t.writeKey(this.nodeName)}};let YXmlEvent=class YXmlEvent extends YEvent{constructor(t,e,r){super(t,r),this.childListChanged=!1,this.attributesChanged=new Set,e.forEach(t=>{null===t?this.childListChanged=!0:this.attributesChanged.add(t)})}};let YXmlHook=class YXmlHook extends YMap{constructor(t){super(),this.hookName=t}_copy(){return new YXmlHook(this.hookName)}clone(){let t=new YXmlHook(this.hookName);return this.forEach((e,r)=>{t.set(r,e)}),t}toDOM(t=document,e={},r){let n;let i=e[this.hookName];return(n=void 0!==i?i.createDom(this):document.createElement(this.hookName)).setAttribute("data-yjs-hook",this.hookName),void 0!==r&&r._createAssociation(n,this),n}_write(t){t.writeTypeRef(M),t.writeKey(this.hookName)}};let YXmlText=class YXmlText extends YText{get nextSibling(){let t=this._item?this._item.next:null;return t?t.content.type:null}get prevSibling(){let t=this._item?this._item.prev:null;return t?t.content.type:null}_copy(){return new YXmlText}clone(){let t=new YXmlText;return t.applyDelta(this.toDelta()),t}toDOM(t=document,e,r){let n=t.createTextNode(this.toString());return void 0!==r&&r._createAssociation(n,this),n}toString(){return this.toDelta().map(t=>{let e=[];for(let r in t.attributes){let n=[];for(let e in t.attributes[r])n.push({key:e,value:t.attributes[r][e]});n.sort((t,e)=>t.key<e.key?-1:1),e.push({nodeName:r,attrs:n})}e.sort((t,e)=>t.nodeName<e.nodeName?-1:1);let r="";for(let t=0;t<e.length;t++){let n=e[t];r+=`<${n.nodeName}`;for(let t=0;t<n.attrs.length;t++){let e=n.attrs[t];r+=` ${e.key}="${e.value}"`}r+=">"}r+=t.insert;for(let t=e.length-1;t>=0;t--)r+=`</${e[t].nodeName}>`;return r}).join("")}toJSON(){return this.toString()}_write(t){t.writeTypeRef(x)}};let AbstractStruct=class AbstractStruct{constructor(t,e){this.id=t,this.length=e}get deleted(){throw u.Nw()}mergeWith(t){return!1}write(t,e,r){throw u.Nw()}integrate(t,e){throw u.Nw()}};let GC=class GC extends AbstractStruct{get deleted(){return!0}delete(){}mergeWith(t){return this.constructor===t.constructor&&(this.length+=t.length,!0)}integrate(t,e){e>0&&(this.id.clock+=e,this.length-=e),addStruct(t.doc.store,this)}write(t,e){t.writeInfo(0),t.writeLen(this.length-e)}getMissing(t,e){return null}};let ContentBinary=class ContentBinary{constructor(t){this.content=t}getLength(){return 1}getContent(){return[this.content]}isCountable(){return!0}copy(){return new ContentBinary(this.content)}splice(t){throw u.Nw()}mergeWith(t){return!1}integrate(t,e){}delete(t){}gc(t){}write(t,e){t.writeBuf(this.content)}getRef(){return 3}};let ContentDeleted=class ContentDeleted{constructor(t){this.len=t}getLength(){return this.len}getContent(){return[]}isCountable(){return!1}copy(){return new ContentDeleted(this.len)}splice(t){let e=new ContentDeleted(this.len-t);return this.len=t,e}mergeWith(t){return this.len+=t.len,!0}integrate(t,e){addToDeleteSet(t.deleteSet,e.id.client,e.id.clock,this.len),e.markDeleted()}delete(t){}gc(t){}write(t,e){t.writeLen(this.len-e)}getRef(){return 1}};let createDocFromOpts=(t,e)=>new Doc({guid:t,...e,shouldLoad:e.shouldLoad||e.autoLoad||!1});let ContentDoc=class ContentDoc{constructor(t){t._item&&console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."),this.doc=t;let e={};this.opts=e,t.gc||(e.gc=!1),t.autoLoad&&(e.autoLoad=!0),null!==t.meta&&(e.meta=t.meta)}getLength(){return 1}getContent(){return[this.doc]}isCountable(){return!0}copy(){return new ContentDoc(createDocFromOpts(this.doc.guid,this.opts))}splice(t){throw u.Nw()}mergeWith(t){return!1}integrate(t,e){this.doc._item=e,t.subdocsAdded.add(this.doc),this.doc.shouldLoad&&t.subdocsLoaded.add(this.doc)}delete(t){t.subdocsAdded.has(this.doc)?t.subdocsAdded.delete(this.doc):t.subdocsRemoved.add(this.doc)}gc(t){}write(t,e){t.writeString(this.doc.guid),t.writeAny(this.opts)}getRef(){return 9}};let ContentEmbed=class ContentEmbed{constructor(t){this.embed=t}getLength(){return 1}getContent(){return[this.embed]}isCountable(){return!0}copy(){return new ContentEmbed(this.embed)}splice(t){throw u.Nw()}mergeWith(t){return!1}integrate(t,e){}delete(t){}gc(t){}write(t,e){t.writeJSON(this.embed)}getRef(){return 5}};let ContentFormat=class ContentFormat{constructor(t,e){this.key=t,this.value=e}getLength(){return 1}getContent(){return[]}isCountable(){return!1}copy(){return new ContentFormat(this.key,this.value)}splice(t){throw u.Nw()}mergeWith(t){return!1}integrate(t,e){let r=e.parent;r._searchMarker=null,r._hasFormatting=!0}delete(t){}gc(t){}write(t,e){t.writeKey(this.key),t.writeJSON(this.value)}getRef(){return 6}};let ContentJSON=class ContentJSON{constructor(t){this.arr=t}getLength(){return this.arr.length}getContent(){return this.arr}isCountable(){return!0}copy(){return new ContentJSON(this.arr)}splice(t){let e=new ContentJSON(this.arr.slice(t));return this.arr=this.arr.slice(0,t),e}mergeWith(t){return this.arr=this.arr.concat(t.arr),!0}integrate(t,e){}delete(t){}gc(t){}write(t,e){let r=this.arr.length;t.writeLen(r-e);for(let n=e;n<r;n++){let e=this.arr[n];t.writeString(void 0===e?"undefined":JSON.stringify(e))}}getRef(){return 2}};let ContentAny=class ContentAny{constructor(t){this.arr=t}getLength(){return this.arr.length}getContent(){return this.arr}isCountable(){return!0}copy(){return new ContentAny(this.arr)}splice(t){let e=new ContentAny(this.arr.slice(t));return this.arr=this.arr.slice(0,t),e}mergeWith(t){return this.arr=this.arr.concat(t.arr),!0}integrate(t,e){}delete(t){}gc(t){}write(t,e){let r=this.arr.length;t.writeLen(r-e);for(let n=e;n<r;n++){let e=this.arr[n];t.writeAny(e)}}getRef(){return 8}};let ContentString=class ContentString{constructor(t){this.str=t}getLength(){return this.str.length}getContent(){return this.str.split("")}isCountable(){return!0}copy(){return new ContentString(this.str)}splice(t){let e=new ContentString(this.str.slice(t));this.str=this.str.slice(0,t);let r=this.str.charCodeAt(t-1);return r>=55296&&r<=56319&&(this.str=this.str.slice(0,t-1)+"�",e.str="�"+e.str.slice(1)),e}mergeWith(t){return this.str+=t.str,!0}integrate(t,e){}delete(t){}gc(t){}write(t,e){t.writeString(0===e?this.str:this.str.slice(e))}getRef(){return 4}};let b=[t=>new YArray,t=>new YMap,t=>new YText,t=>new YXmlElement(t.readKey()),t=>new YXmlFragment,t=>new YXmlHook(t.readKey()),t=>new YXmlText],I=0,E=1,A=2,T=3,v=4,M=5,x=6;let ContentType=class ContentType{constructor(t){this.type=t}getLength(){return 1}getContent(){return[this.type]}isCountable(){return!0}copy(){return new ContentType(this.type._copy())}splice(t){throw u.Nw()}mergeWith(t){return!1}integrate(t,e){this.type._integrate(t.doc,e)}delete(t){let e=this.type._start;for(;null!==e;)e.deleted?e.id.clock<(t.beforeState.get(e.id.client)||0)&&t._mergeStructs.push(e):e.delete(t),e=e.right;this.type._map.forEach(e=>{e.deleted?e.id.clock<(t.beforeState.get(e.id.client)||0)&&t._mergeStructs.push(e):e.delete(t)}),t.changed.delete(this.type)}gc(t){let e=this.type._start;for(;null!==e;)e.gc(t,!0),e=e.right;this.type._start=null,this.type._map.forEach(e=>{for(;null!==e;)e.gc(t,!0),e=e.left}),this.type._map=new Map}write(t,e){this.type._write(t)}getRef(){return 7}};let followRedone=(t,e)=>{let r,n=e,i=0;do i>0&&(n=createID(n.client,n.clock+i)),r=getItem(t,n),i=n.clock-r.id.clock,n=r.redone;while(null!==n&&r instanceof Item);return{item:r,diff:i}},keepItem=(t,e)=>{for(;null!==t&&t.keep!==e;)t.keep=e,t=t.parent._item},splitItem=(t,e,r)=>{let{client:n,clock:i}=e.id,s=new Item(createID(n,i+r),e,createID(n,i+r-1),e.right,e.rightOrigin,e.parent,e.parentSub,e.content.splice(r));return e.deleted&&s.markDeleted(),e.keep&&(s.keep=!0),null!==e.redone&&(s.redone=createID(e.redone.client,e.redone.clock+r)),e.right=s,null!==s.right&&(s.right.left=s),t._mergeStructs.push(s),null!==s.parentSub&&null===s.right&&s.parent._map.set(s.parentSub,s),e.length=r,s},isDeletedByUndoStack=(t,e)=>i.G(t,t=>isDeleted(t.deletions,e)),redoItem=(t,e,r,n,i,s)=>{let l;let o=t.doc,c=o.store,a=o.clientID,d=e.redone;if(null!==d)return getItemCleanStart(t,d);let h=e.parent._item,u=null;if(null!==h&&!0===h.deleted){if(null===h.redone&&(!r.has(h)||null===redoItem(t,h,r,n,i,s)))return null;for(;null!==h.redone;)h=getItemCleanStart(t,h.redone)}let g=null===h?e.parent:h.content.type;if(null===e.parentSub){for(u=e.left,l=e;null!==u;){let e=u;for(;null!==e&&e.parent._item!==h;)e=null===e.redone?null:getItemCleanStart(t,e.redone);if(null!==e&&e.parent._item===h){u=e;break}u=u.left}for(;null!==l;){let e=l;for(;null!==e&&e.parent._item!==h;)e=null===e.redone?null:getItemCleanStart(t,e.redone);if(null!==e&&e.parent._item===h){l=e;break}l=l.right}}else if(l=null,e.right&&!i){for(u=e;null!==u&&null!==u.right&&(u.right.redone||isDeleted(n,u.right.id)||isDeletedByUndoStack(s.undoStack,u.right.id)||isDeletedByUndoStack(s.redoStack,u.right.id));)for(u=u.right;u.redone;)u=getItemCleanStart(t,u.redone);if(u&&null!==u.right)return null}else u=g._map.get(e.parentSub)||null;let p=getState(c,a),f=createID(a,p),m=new Item(f,u,u&&u.lastId,l,l&&l.id,g,e.parentSub,e.content.copy());return e.redone=f,keepItem(m,!0),m.integrate(t,0),m};let Item=class Item extends AbstractStruct{constructor(t,e,r,n,i,s,l,o){super(t,o.getLength()),this.origin=r,this.left=e,this.right=n,this.rightOrigin=i,this.parent=s,this.parentSub=l,this.redone=null,this.content=o,this.info=this.content.isCountable()?g.Qn:0}set marker(t){(this.info&g.Ko)>0!==t&&(this.info^=g.Ko)}get marker(){return(this.info&g.Ko)>0}get keep(){return(this.info&g.Vw)>0}set keep(t){this.keep!==t&&(this.info^=g.Vw)}get countable(){return(this.info&g.Qn)>0}get deleted(){return(this.info&g.CY)>0}set deleted(t){this.deleted!==t&&(this.info^=g.CY)}markDeleted(){this.info|=g.CY}getMissing(t,e){if(this.origin&&this.origin.client!==this.id.client&&this.origin.clock>=getState(e,this.origin.client))return this.origin.client;if(this.rightOrigin&&this.rightOrigin.client!==this.id.client&&this.rightOrigin.clock>=getState(e,this.rightOrigin.client))return this.rightOrigin.client;if(this.parent&&this.parent.constructor===ID&&this.id.client!==this.parent.client&&this.parent.clock>=getState(e,this.parent.client))return this.parent.client;if(this.origin&&(this.left=getItemCleanEnd(t,e,this.origin),this.origin=this.left.lastId),this.rightOrigin&&(this.right=getItemCleanStart(t,this.rightOrigin),this.rightOrigin=this.right.id),this.left&&this.left.constructor===GC||this.right&&this.right.constructor===GC)this.parent=null;else if(this.parent){if(this.parent.constructor===ID){let t=getItem(e,this.parent);t.constructor===GC?this.parent=null:this.parent=t.content.type}}else this.left&&this.left.constructor===Item&&(this.parent=this.left.parent,this.parentSub=this.left.parentSub),this.right&&this.right.constructor===Item&&(this.parent=this.right.parent,this.parentSub=this.right.parentSub);return null}integrate(t,e){if(e>0&&(this.id.clock+=e,this.left=getItemCleanEnd(t,t.doc.store,createID(this.id.client,this.id.clock-1)),this.origin=this.left.lastId,this.content=this.content.splice(e),this.length-=e),this.parent){if(!this.left&&(!this.right||null!==this.right.left)||this.left&&this.left.right!==this.right){let e,r=this.left;if(null!==r)e=r.right;else if(null!==this.parentSub)for(e=this.parent._map.get(this.parentSub)||null;null!==e&&null!==e.left;)e=e.left;else e=this.parent._start;let n=new Set,i=new Set;for(;null!==e&&e!==this.right;){if(i.add(e),n.add(e),compareIDs(this.origin,e.origin)){if(e.id.client<this.id.client)r=e,n.clear();else if(compareIDs(this.rightOrigin,e.rightOrigin))break}else if(null!==e.origin&&i.has(getItem(t.doc.store,e.origin)))n.has(getItem(t.doc.store,e.origin))||(r=e,n.clear());else break;e=e.right}this.left=r}if(null!==this.left){let t=this.left.right;this.right=t,this.left.right=this}else{let t;if(null!==this.parentSub)for(t=this.parent._map.get(this.parentSub)||null;null!==t&&null!==t.left;)t=t.left;else t=this.parent._start,this.parent._start=this;this.right=t}null!==this.right?this.right.left=this:null!==this.parentSub&&(this.parent._map.set(this.parentSub,this),null!==this.left&&this.left.delete(t)),null===this.parentSub&&this.countable&&!this.deleted&&(this.parent._length+=this.length),addStruct(t.doc.store,this),this.content.integrate(t,this),addChangedTypeToTransaction(t,this.parent,this.parentSub),(null!==this.parent._item&&this.parent._item.deleted||null!==this.parentSub&&null!==this.right)&&this.delete(t)}else new GC(this.id,this.length).integrate(t,0)}get next(){let t=this.right;for(;null!==t&&t.deleted;)t=t.right;return t}get prev(){let t=this.left;for(;null!==t&&t.deleted;)t=t.left;return t}get lastId(){return 1===this.length?this.id:createID(this.id.client,this.id.clock+this.length-1)}mergeWith(t){if(this.constructor===t.constructor&&compareIDs(t.origin,this.lastId)&&this.right===t&&compareIDs(this.rightOrigin,t.rightOrigin)&&this.id.client===t.id.client&&this.id.clock+this.length===t.id.clock&&this.deleted===t.deleted&&null===this.redone&&null===t.redone&&this.content.constructor===t.content.constructor&&this.content.mergeWith(t.content)){let e=this.parent._searchMarker;return e&&e.forEach(e=>{e.p===t&&(e.p=this,!this.deleted&&this.countable&&(e.index-=this.length))}),t.keep&&(this.keep=!0),this.right=t.right,null!==this.right&&(this.right.left=this),this.length+=t.length,!0}return!1}delete(t){if(!this.deleted){let e=this.parent;this.countable&&null===this.parentSub&&(e._length-=this.length),this.markDeleted(),addToDeleteSet(t.deleteSet,this.id.client,this.id.clock,this.length),addChangedTypeToTransaction(t,e,this.parentSub),this.content.delete(t)}}gc(t,e){if(!this.deleted)throw u.zR();this.content.gc(t),e?replaceStruct(t,this,new GC(this.id,this.length)):this.content=new ContentDeleted(this.length)}write(t,e){let r=e>0?createID(this.id.client,this.id.clock+e-1):this.origin,n=this.rightOrigin,i=this.parentSub,s=this.content.getRef()&g.kr|(null===r?0:g.x1)|(null===n?0:g.rc)|(null===i?0:g.cq);if(t.writeInfo(s),null!==r&&t.writeLeftID(r),null!==n&&t.writeRightID(n),null===r&&null===n){let e=this.parent;if(void 0!==e._item){let r=e._item;if(null===r){let r=findRootTypeKey(e);t.writeParentInfo(!0),t.writeString(r)}else t.writeParentInfo(!1),t.writeLeftID(r.id)}else e.constructor===String?(t.writeParentInfo(!0),t.writeString(e)):e.constructor===ID?(t.writeParentInfo(!1),t.writeLeftID(e)):u.zR();null!==i&&t.writeString(i)}this.content.write(t,e)}};let readItemContent=(t,e)=>L[e&g.kr](t),L=[()=>{u.zR()},t=>new ContentDeleted(t.readLen()),t=>{let e=t.readLen(),r=[];for(let n=0;n<e;n++){let e=t.readString();"undefined"===e?r.push(void 0):r.push(JSON.parse(e))}return new ContentJSON(r)},t=>new ContentBinary(t.readBuf()),t=>new ContentString(t.readString()),t=>new ContentEmbed(t.readJSON()),t=>new ContentFormat(t.readKey(),t.readJSON()),t=>new ContentType(b[t.readTypeRef()](t)),t=>{let e=t.readLen(),r=[];for(let n=0;n<e;n++)r.push(t.readAny());return new ContentAny(r)},t=>new ContentDoc(createDocFromOpts(t.readString(),t.readAny())),()=>{u.zR()}];let Skip=class Skip extends AbstractStruct{get deleted(){return!0}delete(){}mergeWith(t){return this.constructor===t.constructor&&(this.length+=t.length,!0)}integrate(t,e){u.zR()}write(t,e){t.writeInfo(10),o.uE(t.restEncoder,this.length-e)}getMissing(t,e){return null}};let U="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},V="__ $YJS$ __";!0===U[V]&&console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438"),U[V]=!0}}]);